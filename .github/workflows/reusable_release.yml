name: Release (Reusable)

on:
    workflow_call:
        inputs:
            version:
                required: true
                type: string
            stage:
                required: true
                type: string
            release_name:
                required: true
                type: string

jobs:
    release:
        name: Release - ${{ inputs.version }} (${{ inputs.stage }})
        if: ${{ always() }}
        runs-on: ubuntu-latest
        env:
            STAGE: ${{ inputs.stage }}
            VERSION: ${{ inputs.version }}
            RELEASE_NAME: ${{ inputs.release_name }}
        steps:
            - run: echo ${{ github.ref }}

            - name: Checkout code
              uses: actions/checkout@v4

            # - name: Downloading artifacts (Windows)
            #   uses: actions/download-artifact@v4
            #   with:
            #       name: bloom-desktop-windows-2022
            #       path: assets

            # - name: Downloading artifacts (macOS)
            #   uses: actions/download-artifact@v4
            #   with:
            #       name: bloom-desktop-macos-12
            #       path: assets

            - name: Downloading artifacts (Linux)
              uses: actions/download-artifact@v4
              with:
                  name: bloom-desktop-ubuntu-20.04
                  path: assets

            - name: Preparing release body
              run: |
                  sed -i 's/\r$//' ../../assets/*.sha256 && sed -i '/^$/d' ../../assets/*.sha256 && sed -i -e 's/\(.*\)/\L\1/' ../../assets/*.sha256
                  LIN_SHA256=$(cat ../../assets/bloom-desktop-${{ env.VERSION }}.AppImage.sha256)
                  echo $LIN_SHA256
                  touch CHANGELOG.md
                  echo '### Changelog' >> CHANGELOG.md
                  echo '------' >> CHANGELOG.md
                  echo '### File Hashes' >> CHANGELOG.md
                  echo '[How to verify the authenticity of your Bloom Desktop download](https://wiki.iota.org/shimmer/introduction/how_tos/verify_download/#verify-your-firefly-desktop-download)' >> CHANGELOG.md
                  echo '| File | Platform | SHA256 Hash |' >> CHANGELOG.md
                  echo '| --- | --- | --- |' >> CHANGELOG.md
                  echo '| bloom-desktop-${{ env.VERSION }}.AppImage | Linux |' $LIN_SHA256 '|' >> CHANGELOG.md
                  cat CHANGELOG.md
              working-directory: packages/desktop

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1.1.2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Bloom Desktop ${{ env.RELEASE_NAME }}
                  body_path: packages/desktop/CHANGELOG.md
                  draft: true
                  prerelease: true

            # - name: Upload macOS binary asset
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       upload_url: ${{ steps.create_release.outputs.upload_url }}
            #       asset_path: assets/bloom-desktop-${{ env.VERSION }}.dmg
            #       asset_name: bloom-desktop-${{ env.VERSION }}.dmg
            #       asset_content_type: application/octet-stream

            # - name: Upload macOS blockmap
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       upload_url: ${{ steps.create_release.outputs.upload_url }}
            #       asset_path: assets/bloom-desktop-${{ env.VERSION }}.dmg.blockmap
            #       asset_name: bloom-desktop-${{ env.VERSION }}.dmg.blockmap
            #       asset_content_type: application/octet-stream

            # - name: Upload Windows binary asset
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       upload_url: ${{ steps.create_release.outputs.upload_url }}
            #       asset_path: assets/bloom-desktop-${{ env.VERSION }}.exe
            #       asset_name: bloom-desktop-${{ env.VERSION }}.exe
            #       asset_content_type: application/octet-stream

            # - name: Upload Windows blockmap
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       upload_url: ${{ steps.create_release.outputs.upload_url }}
            #       asset_path: assets/bloom-desktop-${{ env.VERSION }}.exe.blockmap
            #       asset_name: bloom-desktop-${{ env.VERSION }}.exe.blockmap
            #       asset_content_type: application/octet-stream

            - name: Upload Linux binary asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: assets/bloom-desktop-${{ env.VERSION }}.AppImage
                  asset_name: bloom-desktop-${{ env.VERSION }}.AppImage
                  asset_content_type: application/octet-stream

            - name: Upload zip asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: assets/bloom-desktop-${{ env.VERSION }}.zip
                  asset_name: bloom-desktop-${{ env.VERSION }}.zip
                  asset_content_type: application/octet-stream

            - name: Upload updater yml
              run: |
                gh release upload $VERSION latest-linux.yml latest.yml latest-mac.yml
              env:
                VERSION: ${{ env.VERSION }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash

            - name: Upload Linux code signature asset
              run: |
                gh release upload $VERSION $ASSET_PATH
              env:
                ASSET_PATH: assets/bloom-desktop-${{ env.VERSION }}.AppImage.asc
                VERSION: ${{ env.VERSION }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash

            - name: Listing artifacts
              run: ls -al
