{
    "views": {
        "onboarding": {
            "appSetup": {
                "welcome": {
                    "title": "Welcome to"
                },
                "legal": {
                    "title": "Privacy Policy & Terms of Service"
                }
            },
            "networkSetup": {
                "chooseNetwork": {
                    "title": "Choose network",
                    "body": "Set the network for your profile.",
                    "iota": {
                        "title": "IOTA",
                        "body": "IOTA Mainnet"
                    },
                    "shimmer": {
                        "title": "Shimmer",
                        "body": "Staging network for IOTA"
                    },
                    "testnet": {
                        "title": "Testnet",
                        "body": "Public beta network for Shimmer"
                    },
                    "custom": {
                        "title": "Custom network",
                        "body": "Support for custom networks and/or nodes"
                    }
                },
                "setupCustomNetwork": {
                    "title": "Connect to a custom network or node"
                }
            },
            "profileSetup": {
                "setup": {
                    "title": "Set up {network, select, IOTA {an} Shimmer {a} Testnet {a} other {a}} {network} profile",
                    "body": "Select the appropriate method to set up your {network} profile."
                },
                "setupNew": {
                    "title": "Create a profile",
                    "body": "You can choose a regular software wallet, or if you have a Ledger device, you can set up a hardware wallet.",
                    "softwareAccount": {
                        "title": "Create a software profile",
                        "description": "Provides a Stronghold file and recovery phrase"
                    },
                    "ledgerAccount": {
                        "title": "Create a hardware profile",
                        "description": "Ledger Nano S or Nano X required"
                    }
                },
                "setupRecovered": {
                    "title": "Recover {network} profile",
                    "body": "If you have an existing mnemonic or Stronghold backup file, you can import it here.",
                    "importMnemonic": "Use recovery phrase",
                    "importMnemonicDescription": "Enter your 24-word mnemonic phrase",
                    "importFile": "Use Stronghold backup",
                    "importFileDescription": "Import your Stronghold backup file",
                    "importLedger": "Use Ledger device",
                    "importLedgerDescription": "Restore from your Ledger Nano S or X device"
                },
                "enterName": {
                    "title": "Create your {network} profile",
                    "profileName": "Profile name",
                    "body1": "You can create multiple user profiles to organise your wallets and improve privacy.",
                    "body2": {
                        "first": "For now, let's start with your first profile name.",
                        "nonFirst": "For now, let's start with your profile name."
                    },
                    "addMore": "You can add more profiles later."
                }
            },
            "strongholdSetup": {
                "setupStrongholdPassword": {
                    "title": "Create a password",
                    "body1": "You need a strong password to protect your funds. Use a combination of words, and avoid common phrases, names or dates.",
                    "body2": "It is recommended that you write down your password in your Recovery Kit."
                }
            },
            "storageProtectionSetup": {
                "setupPinProtection": {
                    "title": "Set up PIN code",
                    "body1": "Enter a 6-digit PIN below. You will be asked for your PIN to access your profile.",
                    "body2": "Use numbers only"
                }
            },
            "profileBackup": {
                "viewMnemonic": {
                    "title": "Recovery phrase",
                    "body1": "In your Recovery Kit, write down the words in the exact order shown.",
                    "body2": "Keep this private and safely stored.",
                    "body3": "It is important to have a written backup. Computers often fail and files can corrupt.",
                    "revealRecoveryPhrase": "Reveal recovery phrase",
                    "hideRecoveryPhrase": "Hide recovery phrase"
                },
                "verifyMnemonic": {
                    "title": "Verify recovery phrase",
                    "body": "Let's check you wrote down the phrase correctly. Please select each word in numbered order. Tip: You can press the number next to the word in your keyboard to select it.",
                    "word": "Word",
                    "verified": "Recovery phrase verified",
                    "verifiedBody": "Remember to keep it private and safely stored."
                }
            },
            "profileRecovery": {
                "importMnemonicPhrase": {
                    "title": "Enter your recovery phrase",
                    "body": "A recovery phrase is 24 words long, all lower case, with spaces between. This is used to recover existing Bloom profiles.",
                    "enter": "Enter your secret recovery phrase",
                    "phraseDetected": "24 word recovery phrase detected"
                },
                "importStrongholdBackup": {
                    "title": "Import your Stronghold backup",
                    "body": "Import a Stronghold backup file to restore your profile."
                },
                "backupPassword": {
                    "body1": "Please enter your backup password.",
                    "body2": "This is the password you set when you first created your backup."
                }
            },
            "shimmerClaiming": {
                "claimRewards": {
                    "title": "Your Shimmer staking rewards",
                    "body": "Check that your Shimmer staking rewards are correct. You may need to search multiple times to find your full balance."
                },
                "success": {
                    "title": "Shimmer claimed",
                    "body": "You have successfully claimed your Shimmer tokens.",
                    "totalRewards": "Total rewards",
                    "successfullyFound": "Successfully found {amount}"
                }
            },
            "congratulations": {
                "title": "Profile setup almost complete...",
                "body": "Your new profile will be ready once the dashboard has successfully loaded.",
                "ledgerHint": "Do not disconnect your Ledger device until the dashboard has finished loading."
            }
        },
        "ledgerInstallationGuide": {
            "title": "Have you installed the {network} app on your Ledger device?",
            "body1": "Before you proceed, you must use Ledger Live to find and install the {network} app.",
            "body2": "Make sure your Ledger firmware is up-to-date. Any pre-installed apps should be updated to their latest versions.",
            "action": "Yes, I've installed the {network} app"
        },
        "connectLedger": {
            "title": "Connect your Ledger to Bloom",
            "body": "For your Ledger device to be found by Bloom, please ensure that the official Ledger Live application is closed.",
            "connect": "Connect your Ledger device",
            "unlock": "Unlock your Ledger with its pin",
            "openApp": "Open the Shimmer app on your Ledger"
        },
        "settings": {
            "settings": "Mîhengên",
            "general": {
                "title": "General"
            },
            "profile": {
                "title": "Jînname"
            },
            "network": {
                "title": "Network"
            },
            "collectibles": {
                "title": "Collectibles"
            },
            "security": {
                "title": "Ewlehî"
            },
            "advanced": {
                "title": "Advanced"
            },
            "helpAndInfo": {
                "title": "Alîkarî & Agahî"
            },
            "theme": {
                "title": "Mijad",
                "advice": "If you change your system theme, you may need to restart Bloom to see the effects"
            },
            "language": {
                "title": "Ziman"
            },
            "currency": {
                "title": "Diravcins",
                "description": "Mayîn vergerê cih dike û mihengên girafîkî nûjen dike"
            },
            "notifications": {
                "title": "Hişyarî",
                "description": "Jibo bûyerên kirarîyê hişyariyên sîstemî"
            },
            "networkStatus": {
                "title": "Network status",
                "description": "Displays the status of the node you are currently connected to"
            },
            "exportStronghold": {
                "title": "Export backup",
                "description": "Barê dosyayek Stronghold bikin\n- cîhgira hatî pêborîkirin cuzdank û bûyerên kiryarên we yên dawî"
            },
            "appLock": {
                "title": "Automatic logout",
                "description": "Dema bêçalaktiyê berî ku çenteyên we kilît bibin û hûn ji nav derkevin"
            },
            "strongholdPasswordTimeout": {
                "title": "Stronghold Timeout",
                "description": "Length of time before your Stronghold password is required again"
            },
            "maxMediaSize": {
                "title": "Maximum media size",
                "description": "NFT media with sizes greater than this limit will not be downloaded and a placeholder representing the media type will be displayed instead"
            },
            "maxMediaDownloadTime": {
                "title": "Maximum download time",
                "description": "NFT media which take longer than this limit to download will be canceled and a placeholder representing the media type will be displayed instead"
            },
            "refreshNftMedia": {
                "title": "Refresh NFT media",
                "description": "NFT media cached for this account will be deleted and then downloaded again"
            },
            "changePassword": {
                "title": "Pêborînê biguherînê",
                "description": "Your password is used to secure your wallets. You must use a strong password to protect your funds"
            },
            "changePincode": {
                "title": "Qoda PIN'ê biguherîne",
                "description": "PIN mayîn û veşarîyên kirarîyê we diparêze",
                "currentPincode": "PIN'a heyî",
                "newPincode": "PIN'a nû",
                "confirmNewPincode": "PIN'a nû tomarbike",
                "action": "PIN'ê biguherîne"
            },
            "changeProfileName": {
                "title": "Change profile name",
                "description": "Change your Bloom profile name",
                "success": "You changed your profile name"
            },
            "walletFinder": {
                "title": "Wallet finder",
                "description": "Perform an extended search of your previously used wallets"
            },
            "hiddenAccounts": {
                "title": "Cuzdankên veşartî",
                "description": "Selecting this options will show wallets that were previously hidden"
            },
            "deleteProfile": {
                "title": "Profîlê jêbibe",
                "description": "Deletes your entire profile, wallets and transaction history. Make sure you have a backup"
            },
            "deepLinks": {
                "title": "Deep links",
                "description": "Automatically fill transaction data in Bloom upon clicking a deep link starting with {appProtocol}://"
            },
            "networkInformation": {
                "title": "Network information",
                "connectedTo": "Connected to"
            },
            "configureNodeList": {
                "title": "Node configuration",
                "description": "Manage the list of nodes you connect to",
                "primaryNode": "Girêdana yekemîn",
                "excludeNode": "Girêdanê lê neke",
                "includeNode": "Girêdanê lê bike",
                "editDetails": "Edit details",
                "setAsPrimary": "Set primary node",
                "unsetAsPrimary": "Clear primary node",
                "removeNode": "Girêdanê jêbibe",
                "noNodes": "There are no nodes, unable to connect to the network"
            },
            "localProofOfWork": {
                "title": "Proof of work",
                "description": "Complete proof of work locally on your device or outsource to the node"
            },
            "errorLog": {
                "title": "Têketina çewtiyê",
                "description": "Jibo çareserkirina pirsgrêkekê şaşîtiyan bibînin"
            },
            "crashReporting": {
                "title": "Crash reports",
                "body": "Help the developers improve Bloom by automatically sending diagnostic data when an error or crash occurs",
                "checkbox": "Send crash reports",
                "advice": "Please restart the Bloom application to {sendCrashReports, select, true {start sharing crash reports} false {stop sharing crash reports} other {apply this change}}"
            },
            "diagnostics": {
                "title": "Pêderk",
                "description": "Zanyarîyên sîstem û sazîyê bibînin"
            },
            "troubleshoot": {
                "title": "Sererastkirin",
                "description": "Sêrbazê Çareserkirina Pirsgirêkan bikar bînin ku pirsgirêkên hevpar çareser bikin"
            },
            "documentation": {
                "title": "Belgekirin",
                "description": "Jibo hînbûna rêveberin kar hemî hurgulîyan binêrin belgedankê"
            },
            "faq": {
                "title": "Pirsên tê kirin",
                "description": "PPP bibînin ku ji pirsgirêk an pirsek hevpar re bibin alîkar"
            },
            "discord": {
                "title": "Lihevnekirin",
                "description": "Arîkarîyê ji civaka IOTA Discord bistînin"
            },
            "about": {
                "title": "Ji dor"
            },
            "reportAnIssue": {
                "title": "Pirsgirêkê ragehîne",
                "description": "Report a bug to the developers. Check through to make sure it hasn't already been reported"
            },
            "developerToggle": {
                "title": "Developer Mode",
                "description": "Switch developer mode on to enable more features in experimental state"
            }
        },
        "login": {
            "pleaseWait": "Please wait {time, plural, one {# second} other {# seconds}}",
            "incorrectAttempts": "{attempts, plural, one {# incorrect attempt} other {# incorrect attempts}}",
            "hintStronghold": "Your Stronghold's version is out of date. Please log in to update your Stronghold."
        },
        "loadProfile": {
            "loginSteps": {
                "buildProfileManager": "Initialising profile manager",
                "updateNodeInfo": "Checking node health",
                "recoverAccounts": "Generating accounts",
                "loadAccounts": "Syncing accounts",
                "loadAssets": "Loading native assets",
                "loadActivities": "Building activity history",
                "setStrongholdStatus": "Securing stronghold",
                "startBackgroundSync": "Starting background sync",
                "loggingIn": "Loading dashboard"
            }
        },
        "dashboard": {
            "network": {
                "operational": "Network operational",
                "degraded": "Network degraded",
                "down": "Network down",
                "disconnected": "Disconnected from node",
                "status": "Hal"
            },
            "portfolio": {
                "tab": "Porfolio",
                "asset": "Asset",
                "network": "Network",
                "marketCap": "Market cap",
                "price": "Price",
                "amount": "Amount"
            },
            "activity": {
                "tab": "Activity",
                "asset": "Asset",
                "action": "Action",
                "address": "Address",
                "amount": "Amount"
            },
            "profileModal": {
                "allSettings": "All settings",
                "logout": "Derkeve",
                "stronghold": {
                    "title": "Profile lock",
                    "locked": "Stronghold locked",
                    "unlocked": "Stronghold unlocked"
                },
                "hardware": {
                    "title": "Hardware Device",
                    "statuses": {
                        "appNotOpen": "Ledger unlocked but app not open",
                        "correctAppOpen": "Ledger unlocked and app open ",
                        "locked": "Ledger securely locked",
                        "notConnected": "Ledger not connected"
                    }
                }
            },
            "drawers": {
                "networkConfig": {
                    "addChain": {
                        "title": "Add chain"
                    },
                    "chain": {
                        "chainId": "Chain ID",
                        "aliasAddress": "Alias Address",
                        "iscpEndpoint": "ISCP Endpoint",
                        "explorerUrl": "Explorer URL (optional)",
                        "errors": {
                            "cannotBeEmpty": "Name cannot be empty",
                            "nameTooLong": "Name is too long",
                            "aliasAddressWrongFormat": "Must be in either hex or Bech32 format",
                            "aliasAddressAlreadyInUse": "Alias address already in use",
                            "invalidUrl": "Invalid URL"
                        }
                    },
                    "chainDepositAddress": {
                        "title": "Chain deposit address",
                        "networkTitle": "Network deposit address"
                    },
                    "chainInformation": {
                        "title": "Chain information"
                    },
                    "confirmLedgerEvmAddress": {
                        "title": "Confirm EVM address",
                        "header": "We have generated your EVM address"
                    },
                    "connectedChains": {
                        "title": "Connected chains"
                    },
                    "connectLedgerDevice": {
                        "title": "Connect Ledger Device",
                        "header": "Open the Ethereum app",
                        "body": "For your Ledger device to be found by Bloom, please ensure that the official Ledger Live application is closed before following these steps.",
                        "requirements": {
                            "connect": "Connect and unlock your Ledger",
                            "openApp": "Open the Ethereum app on your Ledger"
                        }
                    },
                    "editChain": {
                        "title": "Edit chain"
                    },
                    "removeChain": {
                        "title": "Remove chain"
                    }
                },
                "contactBook": {
                    "contactList": {
                        "title": "Contact list",
                        "addContact": "Add contact"
                    },
                    "contactInformation": {
                        "title": "Contact Information",
                        "editContact": "Edit contact",
                        "removeContact": "Remove contact",
                        "addNetworkAddress": "Add network address"
                    },
                    "addContact": {
                        "title": "Add contact"
                    },
                    "editContact": {
                        "title": "Edit contact"
                    },
                    "removeContact": {
                        "title": "Remove contact",
                        "body": "Are you sure you want to remove this contact?",
                        "hint": "Please note after removing a contact Bloom will show its actual addresses."
                    },
                    "addNetworkAddress": {
                        "title": "Add network address"
                    },
                    "editNetworkAddresses": {
                        "title": "Edit network addresses"
                    },
                    "removeNetworkAddresses": {
                        "title": "Remove network addresses",
                        "body": "Are you sure you want to remove the contact’s {network} network addresses?",
                        "hint": "Please note after removing a contact’s network addresses Bloom will no longer associate it with them in transactions or activities."
                    }
                },
                "dapps": {
                    "dappsList": {
                        "title": "Connected dApps",
                        "connectDapp": "Connect dApp",
                        "hint": "WalletConnect allows you to connect Bloom with dApps directly or with a connection code."
                    },
                    "inputConnectionCode": {
                        "title": "Connect to a dApp",
                        "inputLabel": "Wallet Connect code",
                        "hint": "Add new dApps by adding a Wallet Connect code below."
                    },
                    "confirmConnection": {
                        "title": "Connect with an application",
                        "hint": "A third party service wants to connect with your wallet for the first time. You can choose if you wish to trust this connection."
                    }
                }
            },
            "toasts": {
                "backup": {
                    "header": "Backup Required",
                    "body": "You have not backed up your profile yet! We highly recommend backing this up in case you lose access to this device.",
                    "button": "Backup now"
                },
                "version": {
                    "body": "You are currently using an early version of Bloom.",
                    "button": "Find out more"
                },
                "update": {
                    "header": "Update Required",
                    "body": "A new Bloom update is available today.",
                    "button": "Update now"
                }
            }
        },
        "picker": {
            "color": {
                "title": "Color picker",
                "hexCode": "Color hex code"
            }
        },
        "collectibles": {
            "gallery": {
                "title": "Collectibles",
                "emptyTitle": "No collectibles",
                "noResults": "No results",
                "emptyDescription": "Deposit or Receive your first collectible now!"
            },
            "details": {
                "storageDepositDescription": "A refundable deposit required to store your NFT on the Tangle.",
                "menu": {
                    "download": "Download",
                    "setPfp": "Set NFT profile pic",
                    "unsetPfp": "Unset NFT profile pic",
                    "view": "View media in browser",
                    "burn": "Burn NFT"
                }
            }
        },
        "governance": {
            "votingPower": {
                "title": "Voting power",
                "maximal": "Maximal voting power: {value}",
                "manage": "Manage voting power"
            },
            "proposalsDetails": {
                "title": "Details",
                "totalProposals": "Total proposals",
                "activeProposals": "Active proposals",
                "votingProposals": "Proposals you are voting on",
                "votedProposals": "Total proposals you voted on"
            },
            "proposals": {
                "title": "Proposals",
                "voted": "Voted",
                "successEdit": "Proposal successfully edited",
                "successAdd": "{numberOfProposals, select, one {Proposal} other {Proposals}} successfully added",
                "successAddAll": "{numberOfProposals, select, one {Proposal} other {Proposals}} successfully added to all accounts",
                "successRemove": "Proposal successfully removed",
                "emptyTitle": "No proposals"
            },
            "statusTimeline": {
                "upcoming": "Announcement",
                "commencing": "Voting open",
                "holding": "Counting starts",
                "ended": "Counting stops"
            },
            "details": {
                "yourVote": {
                    "title": "Your vote",
                    "total": "Total votes counted",
                    "power": "Voting power"
                },
                "proposalInformation": {
                    "title": "Proposal information",
                    "votingOpens": "Voting opens on",
                    "countingStarts": "Counting starts on",
                    "countingEnds": "Counting ends on",
                    "countingEnded": "Counting ended on",
                    "eventId": "Event ID",
                    "nodeUrl": "Node URL"
                },
                "fetching": "Fetching proposal data",
                "hintVote": "You can not vote on a proposal that is in the announcement phase, voting will open in {time}."
            }
        },
        "updateStronghold": {
            "update": {
                "title": "Update Stronghold",
                "loginBody": "Your Stronghold's version is out of date. Provide your password to update Stronghold.",
                "recoveryBody": "The imported Stronghold’s version is out of date, to continue we will need to update the stronghold to the latest version."
            },
            "updateBackup": {
                "loginTitle": "Stronghold updated",
                "loginBody": "It's all good now - you're running the latest Stronghold version",
                "recoveryTitle": "Stronghold is successfully recovered and updated",
                "recoveryBody": "You can now continue setting up your wallet",
                "hint": "We highly recommend to delete all previous Stronghold backup files and save a new one"
            },
            "changePassword": {
                "hint": "Your Stronghold was out of date and has been updated. We recommend that you change your Stronghold password."
            }
        }
    },
    "popups": {
        "enableLedgerBlindSigning": {
            "title": "Enable Blind Signing",
            "info": "In order to confirm this transaction you need to enable Blind Signing on your Ledger device.",
            "step_1": "Connect and unlock your Ledger device",
            "step_2": "Open the {appName} application",
            "step_3": "Press the right button to navigate to Settings, then press both buttons to validate. Your Ledger device displays Blind Signing.",
            "step_4": "Press both buttons to enable transaction blind signing. The device displays Enabled. You're done."
        },
        "balanceBreakdown": {
            "title": "Balance breakdown",
            "available": {
                "title": "Available",
                "subtitle": "Funds fully available for spending"
            },
            "pending": {
                "title": "Pending",
                "subtitle": "Temporarily locked in transactions"
            },
            "locked": {
                "title": "Locked",
                "subtitle": "Temporarily locked for governance"
            },
            "storageDeposit": {
                "title": "Storage deposit",
                "subtitle": "These funds are reserved for storing native assets."
            },
            "totalBalance": {
                "title": "Total balance",
                "subtitle": ""
            },
            "basicOutputs": {
                "title": "Native Tokens",
                "subtitle": "Reserved for Native Token storage"
            },
            "nftOutputs": {
                "title": "NFTs",
                "subtitle": "Reserved for NFT storage"
            },
            "aliasOutputs": {
                "title": "Aliases",
                "subtitle": "Reserved for Alias storage"
            },
            "foundryOutputs": {
                "title": "Foundries",
                "subtitle": "Reserved for Native Token Foundry storage"
            },
            "unclaimed": {
                "title": "Unclaimed transaction",
                "subtitle": "Temporarily locked in unclaimed transactions"
            },
            "timelock": {
                "title": "Time lock",
                "subtitle": "Temporarily locked in timelocked transactions"
            },
            "storageDepositReturn": {
                "title": "SDRUC",
                "subtitle": "Temporarily locked in Storage Deposit Return"
            },
            "governance": {
                "title": "Governance",
                "subtitle": "Reserved for voting power"
            },
            "minimizeStorageDepositButton": "Minimize storage deposit"
        },
        "minimizeStorageDeposit": {
            "title": "Minimize storage deposit",
            "description": "Consolidate outputs to minimize your required storage deposit and increase your available balance.",
            "confirmButton": "Consolidate"
        },
        "alias": {
            "title": "Confirm alias creation"
        },
        "password": {
            "title": "Nasnav pêwîste",
            "subtitle": "Please provide your password to unlock your wallets",
            "backup": "Ji kerema xwe şîfreya xwe binivîsin da ku hûn hilanînê bişînin"
        },
        "appUpdate": {
            "title": "Check for updates",
            "installedVersion": "Installed version",
            "newVerion": "New version",
            "stage": "Stage",
            "prod": "Production",
            "alpha": "Alpha",
            "beta": "Beta",
            "releasedAt": "Released at",
            "updateAvailable": "Update is available",
            "updatesDisabled": "There are updates available, but in-app upgrade is disabled for your operating system.",
            "latestInstalled": "You are running the latest and safest version"
        },
        "backupStronghold": {
            "title": "Backup your stronghold file",
            "body": "It is important to back up your wallet regularly to ensure you have a copy of your wallets and transaction history. If you lose your backup and recovery phrase you will lose access to your funds."
        },
        "deeplinkAccountSwitch": {
            "title": "Select a wallet",
            "body": "You just followed a deep link. Please select the wallet with which you want to continue."
        },
        "deeplinkError": {
            "title": "Failed link",
            "body": "This link failed or is invalid. Please try again or double check the source of the link."
        },
        "deleteAccount": {
            "title": "Jêbibe {name}?",
            "body": "Are you sure you want to delete this wallet?",
            "hint": "Note: once deleted, you can restore this wallet by using the \"Wallet Finder\" in the settings.",
            "typePassword": "Jibo pêjirandinê pêborîna cuzdaneka xwe binivîse."
        },
        "externalUrl": {
            "title": "Open URL in Browser",
            "body": "Are you sure you want to open \"{url}\" in the browser?",
            "hint": "This URL is unknown to Bloom. Please double check the URL before opening it.",
            "action": "Open URL",
            "invalidProtocol": "Cannot open URL with invalid protocol"
        },
        "excludeNode": {
            "title": "Exclude node",
            "body": "Are you sure you want to exclude {url} from the available node pool?"
        },
        "unsetAsPrimaryNode": {
            "title": "Clear primary node",
            "body": "Are you sure you want to clear {url} as the primary node?"
        },
        "node": {
            "titleAdd": "Girêkê zêde bike",
            "titleUpdate": "Girêk nûjen",
            "titleRemove": "Girêdanê jêbibe",
            "titleRemoveAll": "Remove all nodes",
            "titleInfo": "Node information",
            "addingNode": "Adding node",
            "updatingNode": "Updating node",
            "loadingNodeInfo": "Loading node info",
            "nodeAddress": "Navnîşana girê",
            "optionalUsername": "Bikarhêner (optional)",
            "optionalPassword": "Pêborîn (optional)",
            "optionalJwt": "JSON web token (optional)",
            "removeConfirmation": "Tu jêbirana dosyê piştrastî?",
            "info": {
                "general": {
                    "tab": "General",
                    "name": "Name",
                    "url": "URL",
                    "version": "Version",
                    "pruningIndex": "Pruning index",
                    "features": "Features"
                },
                "metrics": {
                    "tab": "Metrics",
                    "blocksPerSecond": "Blocks per second",
                    "referencedBlocksPerSecond": "Referenced blocks per second",
                    "referencedRate": "Referenced rate",
                    "latestMilestone": "Latest milestone",
                    "confirmedMilestone": "Confirmed milestone"
                },
                "protocol": {
                    "tab": "Protocol",
                    "network": "Network",
                    "bech32Hrp": "Bech32 HRP",
                    "tokenSupply": "Token supply",
                    "version": "Version",
                    "minPowScore": "Min PoW Score"
                },
                "baseToken": {
                    "tab": "Base token",
                    "token": "Token",
                    "tickerSymbol": "Ticker",
                    "unit": "Unit",
                    "subunit": "Sub-unit",
                    "decimals": "Decimals",
                    "useMetricPrefix": "Use metric prefix"
                }
            }
        },
        "errorLog": {
            "title": "Bûyerên çewtîyê",
            "empty": "Bûyerên çewtîyê valane."
        },
        "deleteProfile": {
            "title": "Delete profile",
            "confirmation": "Ma hûn pê ewle ne ku hûn dixwazin vê profîlê jê bibin? Ev operasyon nayê paşve xistin.",
            "typePassword": "Jibo pêjirandinê pêborîna xwe binivîse."
        },
        "diagnostics": {
            "title": "Diagnostics",
            "node": "Girê",
            "platform": "Platform",
            "platformVersion": "Versîyona Platformê",
            "platformArchitecture": "Platforma Erdezyar",
            "cpuCount": "Hijmara CPU",
            "totalMem": "Bîrkarîya Giştî",
            "freeMem": "Bîrkarîya Vala",
            "userPath": "Rêya bikarhêner"
        },
        "transaction": {
            "selectToken": "Select a token",
            "selectAmount": "Send {tokenName}",
            "selectRecipient": "Send {assetName} to",
            "transactionSummary": "Transaction to {recipient}",
            "surplusIncluded": "This transaction contains a surplus amount. Please double check this is the amount you want to send."
        },
        "walletFinder": {
            "title": "Wallet finder",
            "body": "Perform a more exhaustive search of addresses to find missing balances and wallets.",
            "accountsSearched": "Wallets searched",
            "accountsFound": "Wallets found",
            "totalWalletBalance": "Total balance",
            "searchAgainHint": "Is your balance or number of wallets incorrect? Search again until your full balance is shown."
        },
        "ledgerNotConnected": {
            "title": "Connect your Ledger",
            "notConnected": "Connect your Ledger device to continue.",
            "locked": "Unlock your Ledger device to continue.",
            "appNotOpen": "Open the Shimmer app on your Ledger device to continue.",
            "correctAppOpen": "Ledger successfully connected, please continue."
        },
        "ledgerAppGuide": {
            "title": "Guide to installing the {legacy} app",
            "steps": {
                "0": "Install and open the Ledger Live application",
                "1": "Ensure that your Ledger is connected",
                "2": "Search for the {legacy} app. You may need to enable Ledger Live developer mode.",
                "3": "Install the {legacy} app",
                "4": "Remember that it's important to close Ledger Live before returning to Bloom"
            }
        },
        "ledgerConnectionGuide": {
            "title": "Tips if your Ledger isn’t connecting",
            "steps": {
                "0": "Make sure Ledger Live is not open on your computer",
                "1": "Ensure you have unlocked your Ledger device with your PIN",
                "2": "Open the new IOTA app on your Ledger device",
                "3": {
                    "text": "Still no luck?",
                    "link": "Try the official Ledger support page"
                }
            }
        },
        "verifyLedgerTransaction": {
            "title": "Verify transaction",
            "info": "Compare and confirm the transaction information displayed on your ledger device against the information below."
        },
        "verifyInternalLedgerTransaction": {
            "title": "Verify internal transaction",
            "info": "Please confirm the internal transaction on your ledger.",
            "hint": "All assets will remain on your wallet when sending an internal transaction."
        },
        "crashReporting": {
            "title": "Crash reporting",
            "body": "Help the developers improve Bloom by automatically sending diagnostic data when an error or crash occurs. If selected, this will take effect after restarting Bloom.",
            "checkbox": "Send crash reports to the IOTA Foundation"
        },
        "signMessage": {
            "title": "Sign message",
            "message": "Message",
            "hint": "No balance will be sent to {dappName} in the process of signing this message.",
            "warning": "dApp cannot be determined. No balance will be sent in the process of signing this message.",
            "action": "Sign message"
        },
        "activityDetails": {
            "title": {
                "fallback": "Activity details",
                "external": {
                    "incoming": {
                        "Pending": "Receiving from {subject}",
                        "Confirmed": "Received from {subject}",
                        "Conflicting": "Failed to receive"
                    },
                    "outgoing": {
                        "Pending": "Sending to {subject}",
                        "Confirmed": "Sent to {subject}",
                        "Conflicting": "Failed to send"
                    }
                },
                "internal": {
                    "incoming": {
                        "Pending": "Transferring from {subject}",
                        "Confirmed": "Transferred from {subject}",
                        "Conflicting": "Failed to transfer"
                    },
                    "outgoing": {
                        "Pending": "Transferring to {subject}",
                        "Confirmed": "Transferred to {subject}",
                        "Conflicting": "Failed to transfer"
                    },
                    "selfTransaction": {
                        "Pending": "Transferring to {subject}",
                        "Confirmed": "Transferred to {subject}",
                        "Conflicting": "Failed to transfer"
                    }
                },
                "mint": {
                    "Pending": "Minting",
                    "Confirmed": "Minted",
                    "Conflicting": "Failed to mint"
                },
                "burn": {
                    "Pending": "Burning",
                    "Confirmed": "Burned",
                    "Conflicting": "Failed to burn"
                },
                "consolidation": {
                    "Pending": "Consolidating outputs",
                    "Confirmed": "Outputs consolidated",
                    "Conflicting": "Failed to consolidate outputs"
                },
                "alias": {
                    "creation": {
                        "Pending": "Creating alias",
                        "Confirmed": "Alias created",
                        "Failed": "Failed to create alias"
                    }
                },
                "governance": {
                    "increaseVotingPower": {
                        "Pending": "Increasing voting power",
                        "Confirmed": "Increased voting power",
                        "Conflicting": "Failed to increased voting power"
                    },
                    "decreaseVotingPower": {
                        "Pending": "Decreasing voting power",
                        "Confirmed": "Decreased voting power",
                        "Conflicting": "Failed to decreased voting power"
                    },
                    "startVoting": {
                        "Pending": "Voting for {proposalName}",
                        "Confirmed": "Voted for {proposalName}",
                        "Conflicting": "Failed to vote for"
                    },
                    "stopVoting": {
                        "Pending": "Stopping voting for {proposalName}",
                        "Confirmed": "Stopped voting for {proposalName}",
                        "Conflicting": "Failed to stopped voting for"
                    },
                    "changedVote": {
                        "Pending": "Changing vote for {proposalName}",
                        "Confirmed": "Changed vote for {proposalName}",
                        "Conflicting": "Failed to change vote for"
                    },
                    "revote": {
                        "Pending": "Revoting",
                        "Confirmed": "Revote",
                        "Conflicting": "Failed to revote"
                    }
                }
            }
        },
        "legalUpdate": {
            "tosTitle": "Terms of Service",
            "privPolicyTitle": "Privacy Policy",
            "tosAndPrivPolicyBody": "We have updated Bloom's Terms of Service and Privacy Policy.",
            "tosBody": "We have updated Bloom's Terms of Service.",
            "privPolicyBody": "We have updated Bloom's Privacy Policy.",
            "tosAndPrivPolicyCheckbox": "I've read and I accept the updated Terms of Service and Privacy Policy",
            "tosCheckbox": "I've read and I accept the updated Terms of Service",
            "privPolicyCheckbox": "I've read and I accept the updated Privacy Policy"
        },
        "giftedStorageDeposit": {
            "tooltipTitle": "Gift storage deposit",
            "tooltipDescription": "Amount kept by the recipient"
        },
        "tokenInformation": {
            "verificationWarning": "This token is unverified. Compare the token metadata against the relevant team’s official website. Only verify tokens that you trust.",
            "tokenMetadata": {
                "standard": "Standard",
                "tokenId": "Token ID",
                "url": "URL",
                "description": "Description"
            },
            "buttons": {
                "verifyToken": "I verify this token"
            }
        },
        "nativeToken": {
            "formTitle": "Mint native tokens",
            "confirmationTitle": "Mint native tokens",
            "property": {
                "totalSupply": "Total supply",
                "maximumSupply": "Maximum supply",
                "mintedTokens": "Minted tokens",
                "meltedTokens": "Melted tokens",
                "circulatingSupply": "Circulating supply",
                "aliasAddress": "Alias controller address",
                "tokenName": "Name",
                "storageDeposit": "Storage Deposit",
                "description": "Description",
                "symbol": "Symbol",
                "decimals": "Decimals",
                "url": "URL",
                "logoUrl": "Logo URL",
                "logo": "Logo",
                "alias": "Alias",
                "tokenId": "Token Id"
            }
        },
        "importErc20Token": {
            "title": "Import ERC20 token",
            "property": {
                "tokenAddress": "Token address"
            },
            "success": "Imported {tokenSymbol} token",
            "error": "Unable to import ERC20 token"
        },
        "noAlias": {
            "title": "Unable to mint",
            "description": "You must own an alias output to mint native tokens. To continue, please create an alias first"
        },
        "mintNftForm": {
            "title": "Mint simple NFT",
            "errors": {
                "invalidMimetype": "Invalid MimeType, check if the file type is supported",
                "quantityTooSmall": "Quantity needs to be greater than 0",
                "quantityTooLarge": "Quantity needs to be smaller than 64",
                "emptyName": "Name is a required field",
                "invalidURI": "Invalid URI, please provide a valid URI",
                "notReachable": "URI not reachable, unable to check NFT type",
                "royaltiesMustBeObject": "Royalties must be an object",
                "royaltiesMustBeJSON": "Royalties must be a valid JSON",
                "invalidAddress": "Invalid address, must be a valid {networkHrp} address where royalties will be sent to",
                "invalidRoyaltyValue": "Invalid value, it must be a numeric decimal representative of the percentage required ie. 0.05",
                "invalidRoyaltyValueSum": "Invalid value, the sum of all royalties must be less than or equal to 1'",
                "attributesMustBeJSON": "Attributes must be a valid JSON",
                "attributesMustBeArrayOfObjects": "Attributes must be an array of objects",
                "attributesInvalidKeys": "Invalid key, attributes must have the keys \"trait_type\" and \"value\"",
                "attributesInvalidValues": "Invalid value, \"trait_type\" must be a non empty string and \"value\" must be a non empty string or a number"
            }
        },
        "faucetRequest": {
            "title": "Faucet request",
            "body": "Are you sure you want to request {token} tokens from the {network} faucet?"
        },
        "manageVotingPower": {
            "title": "Manage voting power",
            "body": "Define your voting power to vote on proposals.",
            "hint": "All funds that you allocate to voting are locked. In order to make them spendable again, you need to decrease your voting power. This affects all proposals with an active vote.",
            "amountZero": "Please be aware that setting your voting power to zero will stop all your votes for all proposals you are currently voting on."
        },
        "addProposal": {
            "title": "Add proposal",
            "body": "Please provide the information listed below to add a proposal.",
            "addToAllAccounts": "Add the proposal to all accounts"
        },
        "editProposal": {
            "title": "Edit proposal",
            "body": "Please provide the new url for the node that contains this proposal."
        },
        "voteForProposal": {
            "title": "Vote for proposal",
            "body": "You're about to vote for {proposal} proposal.",
            "key": "Your voting power",
            "hasAbstained": "You are abstaining from answering {numberOfQuestions, plural, one {# question} other {# questions}}.",
            "noVotingPower": "You do not have any voting power. Please increase your voting power from the Governance dashboard."
        },
        "revote": {
            "title": "Revote on proposals",
            "body": "Changing your voting power temporarily stops your votes for all proposals from being counted. Simply click \"Revote\" to resume voting.",
            "hint": "Bloom remembers all of the proposals and answer options you previously voted for."
        },
        "removeProposal": {
            "title": "Remove proposal",
            "body": "Are you sure you want to remove this proposal?",
            "hint": "Please note that removing a proposal during the counting period will stop your votes but won't impact any votes that have already been counted."
        },
        "stopVoting": {
            "title": "Stop voting",
            "body": "You're about to stop voting for the {proposalName} proposal.",
            "hint": "Please note that stopping voting during the counting period won't impact any votes that have already been counted."
        },
        "nodeAuthRequired": {
            "title": "Authentication required",
            "body": "This node requires additional authentication. Please fill in the appropriate information."
        }
    },
    "actions": {
        "apply": "Apply",
        "continue": "Berdewam",
        "back": "Şûnde",
        "previous": "Previous",
        "next": "Next",
        "cancel": "Betal",
        "close": "Derkeve",
        "claim": "Claim",
        "claiming": "Claiming",
        "claimingRewards": "Claiming rewards",
        "reject": "Reject",
        "confirmRejection": {
            "title": "Reject transaction",
            "description": "Are you sure you want to reject this transaction?",
            "node": "Please note that rejecting a transaction only hides it from your Activity feed"
        },
        "confirmTokenBurn": {
            "title": "Burn {assetName}",
            "hint": "Please note that burning a token may free storage deposit attached to it and is not reversible"
        },
        "confirmNftBurn": {
            "title": "Burn {nftName}",
            "description": "Are you sure you want to burn this NFT?",
            "hint": "Please note that burning an NFT frees the storage deposit attached to it and is not reversible."
        },
        "save": "Tomarkirin",
        "restoreWallet": {
            "iota": "Migrate or restore a wallet",
            "shimmer": "Restore Shimmer profile",
            "testnet": "Restore Testnet profile",
            "custom": "Restore Custom Network profile"
        },
        "restoreWalletDescription": {
            "iota": "Migrate to Chrysalis or restore an existing wallet",
            "shimmer": "Restore an existing Shimmer profile",
            "testnet": "Restore an existing Testnet profile",
            "custom": "Restore an existing Custom Network profile"
        },
        "refreshNftMedia": {
            "title": "Refresh NFT media",
            "description": "Do you want to delete and re-download all NFT media for this account?"
        },
        "createWallet": "Create a new {network} profile",
        "createWalletDescription": "Create a fresh profile running on {network, select, iota {Chrysalis} shimmer {Shimmer} testnet {Testnet} custom {Custom Network} other {Unknown}}",
        "claimShimmer": "Claim Shimmer staking rewards",
        "claimShimmerDescription": "Import IOTA profile and claim staking rewards",
        "createAlias": "Create alias",
        "createAliasDescription": "Create alias output",
        "setPin": "Set PIN",
        "confirmPin": "Confirm PIN",
        "enterYourPin": "PIN'a xwe têkevê",
        "send": "Rêke",
        "receive": "Wergir",
        "create": "Çêkê",
        "updateAndContinue": "Update and continue",
        "tryAgain": "Dîsa biceribîne",
        "visitDiscord": "Here Discord",
        "dragDrop": "Bixişikîn û Berde",
        "importExtentions": ".stronghold file",
        "chooseFile": "Dosyayekê jêbigir",
        "dropHere": "Dosya xwe berdim livir",
        "import": "Import",
        "importing": "Importing",
        "export": "Barkirina Derve",
        "exporting": "Exporting",
        "exportNewStronghold": "Stronghold'ek nû barbikê derve",
        "enableDeepLinks": "Enable deep links",
        "enableDeveloperMode": "Moda pêkirinê çalak bike",
        "enableSystemNotifications": "Danezanên sîstemî bigre",
        "exportTransactionHistory": "Export transaction history",
        "localProofOfWork": "Birhana kar ya heremî",
        "unlock": "Kilîlê Veke",
        "updateBloom": "Update Bloom",
        "restart": "Restart",
        "refresh": "Refresh",
        "saveBackup": "Save backup",
        "customizeAccount": "Taybetkirina cuzdankê",
        "hideAccount": "Cuzdankê veşêre",
        "showAccount": "Veşartina cuzdankê rake",
        "deleteAccount": "Delete wallet",
        "addNode": "Girêkê zêde bike",
        "addingNode": "Adding node",
        "addOfficialNodes": "Add official nodes",
        "updateNode": "Girêk nûjen",
        "removeNode": "Girê jêbibe",
        "hide": "Veşartin\n",
        "hideOthers": "Veşartinên Din\n",
        "showAll": "Hemî nîşan bide\n",
        "useMax": "Use Max",
        "quit": "Derketin",
        "edit": "Serastkirin",
        "undo": "Vegerîne",
        "redo": "Dûbare",
        "cut": "Birrîn",
        "copy": "kopî",
        "copyAllInformation": "Copy all information",
        "paste": "tevlêkirin",
        "selectAll": "Hemîyê Hilbjiêre ",
        "addAccount": "Cuzdankî zêde",
        "checkForUpdates": "Ji bo Nûvekirinan Kontrol bikin",
        "reportAnIssue": "Pirsgirêkekê ragihînin\n",
        "clear": "Paqij bike",
        "yes": "Erê",
        "no": "Na",
        "skip": "Hilavêje",
        "reset": "Bîne serî",
        "downloadRecoveryKit": "Kîta rizgarkirinê tomar bike",
        "skipBackup": "Skip wallet backup",
        "finishSetup": "Sazîyê biqedîn",
        "readDocumentation": "Belgenamê bixwîne",
        "visitFaq": "Here PPP",
        "viewDownloads": "View downloads",
        "viewBalanceBreakdown": "View balance breakdown",
        "showHiddenAccounts": "Cuzdankê veşartî nîşan bidin",
        "confirm": "Tomarkirin",
        "hideNetworkStatistics": "Hide network statistics",
        "findWallets": "Find wallets",
        "search": "Search",
        "searching": "Searching",
        "searchAgain": "Dîsa lê bigere",
        "generateAddress": "Generate address",
        "searchForRewards": "Search for rewards",
        "claimRewards": "Claim rewards",
        "rerunClaimProcess": "Rerun claim process",
        "backup": "Backup",
        "mint": "Mint",
        "mintNativeToken": "Mint native token",
        "mintNft": "Mint NFT",
        "verifyToken": "Verify token",
        "unverifyToken": "Unverify token",
        "hideToken": "Hide token",
        "unhideToken": "Unhide token",
        "burn": "Burn",
        "burnToken": "Burn token",
        "faucetRequest": "Get {token} tokens",
        "refreshTokenMetadata": "Refresh token metadata",
        "test": "Test",
        "testDeepLink": "Test deep link",
        "delete": "Delete",
        "remove": "Remove",
        "depositNft": "Deposit NFTs",
        "vote": "Vote",
        "addProposal": "Add proposal",
        "removeProposal": "Remove proposal",
        "changeNode": "Change node",
        "stopVoting": "Stop voting",
        "revote": "Revote",
        "skipAndKeep": "Skip and keep old password",
        "addChain": "Add chain",
        "untrackToken": "Untrack token"
    },
    "general": {
        "recipient": "Recipient",
        "password": "Şîfre",
        "confirmPassword": "Tesdîqkirin\nŞîfre",
        "currentPassword": "Şîfreya heyî",
        "newPassword": "Şîfreya nû",
        "confirmNewPassword": "Tesdîqkirin Şîfreya nû",
        "sent": "şandin",
        "sending": "Tê şandin",
        "received": "Wergirtin",
        "receiving": "Tê standin",
        "newVotingPower": "New voting power",
        "votingPower": "Voting power",
        "increased": "Voting power increased",
        "increasing": "Increasing voting power",
        "decreased": "Voting power decreased",
        "decreasing": "Decreasing voting power",
        "voted": "Voted",
        "voting": "Voting",
        "changedVote": "Changed vote",
        "changingVote": "Changing vote",
        "revoted": "Revoted",
        "revoting": "Revoting",
        "unvoted": "Unvoted",
        "unvoting": "Unvoting",
        "transfer": "Transfer",
        "transferring": "Transferring",
        "shimmerClaimed": "Claimed",
        "shimmerClaiming": "Claiming",
        "shimmerGenesis": "Shimmer Genesis",
        "minted": "Minted",
        "minting": "Minting",
        "burned": "Burned",
        "burning": "Burning",
        "balanceChanged": "Balance changed",
        "initialBalance": "Initial balance",
        "consolidated": "Outputs consolidated",
        "consolidating": "Consolidating outputs",
        "aliasCreated": "Alias created",
        "creatingAlias": "Creating Alias",
        "sendTo": "Send To",
        "sendAssets": "Send assets",
        "sendAssetToAddress": "Send asset to an address",
        "manageAccount": "Cuzdank birêve bibin",
        "customizeAccount": "Taybetkirina cuzdankê",
        "account": "Tûrik",
        "amount": "Hijmar",
        "addAddress": "Navnîşanê zêde bike",
        "to": "Kî",
        "and": "and",
        "receiveFunds": "Receive funds",
        "address": "Address",
        "addressName": "Address name",
        "myAddress": "My address",
        "viewOnExplorer": "View on Explorer",
        "import": "Barke hundir",
        "stronghold": "Stronghold",
        "lightTheme": "Light",
        "darkTheme": "Dark",
        "systemTheme": "System",
        "balance": "Mayîn",
        "balanceWithValue": "Balance: {balance}",
        "balanceWithNetwork": "{network} Balance",
        "all": "All",
        "incoming": "Yên hatî",
        "outgoing": "Yên çûyî",
        "dev": "Pêşvebir",
        "newAccount": "New account",
        "accountName": "Navê Cuzdankê",
        "activity": "Activity",
        "security": "Ewlehî",
        "network": "Network",
        "networkSelection": "Network selection",
        "destinationNetwork": "Destination network",
        "nodes": "Girê",
        "wallet": "Cuzdank",
        "help": "Alîkarî",
        "confirmed": "Hat Pejirandin",
        "pending": "Bendê ye",
        "addProfile": "Profîlê zêde bikin\n",
        "noRecentHistory": "Bûyer nîne",
        "noFilteredActivity": "No matching activities",
        "noAssets": "No assets",
        "noFilteredAsset": "No matching assets",
        "thisMonth": "This month",
        "search": "Search",
        "passwordUpdating": "Şifre nû dibe...",
        "passwordSuccess": "Pêborîn bi serfirazî hat nûjenkirin",
        "passwordFailed": "Pêborîn bi serfirazî nehat nûjenkirin",
        "exportingStronghold": "Stronghold barke...",
        "exportingStrongholdSuccess": "Stronghold bi serfirazî hat şandin",
        "exportingStrongholdFailed": "Barkirina Stronghold ya derve têk çû",
        "pinCodeSuccess": "Pêborîn bi serfirazî hat nûjenkirin",
        "pinCodeFailed": "Pêborîn bi serfirazî nehat nûjenkirin",
        "passwordStrength": "Hêza pêborînê",
        "passwordStrength0": "Nebaş",
        "passwordStrength1": "Qels",
        "passwordStrength2": "Lawaz",
        "passwordStrength3": "Nacîn",
        "passwordStrength4": "Bihêze",
        "creatingProfile": "Profîlek nû çêdibe, ji kerema xwe rawestin...",
        "fromAddress": "from {account}",
        "toAddress": "to {account}",
        "capsLock": "Caps Lock is on",
        "version": "Version {version}",
        "unknown": "Unknown",
        "unknownAddress": "Unknown address",
        "none": "None",
        "accountColor": "Wallet color",
        "transactionTime": "Transaction time",
        "storageDeposit": "Storage deposit",
        "transactionFee": "Transaction fee",
        "storageDepositPerNft": "Storage deposit per NFT",
        "totalStorageDeposit": "Total storage deposit",
        "expirationTime": "Expiration time",
        "timelockDate": "Timelock",
        "claimedTime": "Claimed at",
        "nftId": "NFT ID",
        "aliasId": "Alias ID",
        "governorAddress": "Governor Address",
        "stateControllerAddress": "State Controller Address",
        "copiedToClipboard": "Copied to clipboard",
        "availableBalanceWithValue": "Available balance: {balance}",
        "amountClaimed": "{amount} claimed",
        "metadata": "Metadata",
        "amountConsolidatedInputs": "Consolidated outputs",
        "name": "Name",
        "note": "Note",
        "tag": "Tag",
        "nodeList": "Node list",
        "claimedIn": "Claimed in",
        "claimingIn": "Claiming in",
        "assets": "Assets",
        "nativeTokens": "Native tokens",
        "mintNativeTokenDescription": "Mint native token following IRC30 standard",
        "mintNftDescription": "Mint NFT following IRC27 standard",
        "faucetRequestDescription": "Request tokens from the {network} faucet",
        "refreshTokenMetadataDescription": "Reset and refresh all token metadata",
        "refreshTokenMetadataHint": "This will reset all your tokens' metadata including the verification status and unhide any hidden assets.",
        "excluded": "Excluded",
        "developerTools": "Developer tools",
        "testDeepLinkDescription": "Simulate a deep link request sent to firefly",
        "url": "URL",
        "hash": "Hash",
        "creating": "Creating",
        "updating": "Updating",
        "transaction": "Transaction",
        "alias": "Alias",
        "foundry": "Foundry",
        "token": "Token",
        "nft": "NFT",
        "type": "Type",
        "immutableIssuer": "Immutable Issuer",
        "smartContract": "Smart Contract",
        "targetContract": "Target contract",
        "contractFunction": "Contract function",
        "standard": "Standard",
        "uri": "URI",
        "issuer": "Issuer",
        "issuerAddress": "Issuer Address",
        "issuerName": "Issuer Name",
        "quantity": "Quantity",
        "collection": "Collection",
        "collectionId": "Collection ID",
        "collectionName": "Collection Name",
        "royalties": "Royalties",
        "description": "Description",
        "attributes": "Attributes",
        "details": "Details",
        "properties": "Properties",
        "statistics": "Statistics",
        "internalTransaction": "Internal transaction",
        "coinType": "Coin type",
        "custom": "Custom",
        "evmAddress": "EVM address",
        "importErc20Token": "Import ERC20 token",
        "optionalField": "{field} (optional)",
        "gifted": "Gifted",
        "connected": "Connected",
        "estimatedFee": "Estimated fee",
        "maxFees": "Max fees",
        "contacts": "Contacts",
        "apps": "Apps",
        "networks": "Networks",
        "ledgerDevice": "Ledger device"
    },
    "filters": {
        "title": "Filters",
        "showHidden": {
            "label": "Show hidden",
            "yes": "Yes",
            "no": "No"
        },
        "showRejected": {
            "label": "Show rejected",
            "yes": "Yes",
            "no": "No"
        },
        "showValueless": {
            "label": "Show valueless",
            "yes": "Yes",
            "no": "No"
        },
        "ascDesc": {
            "Asc": "Ascending",
            "Desc": "Descending"
        },
        "assetOrder": {
            "label": "Order",
            "Name": "Name",
            "Amount": "Amount"
        },
        "internalExternal": {
            "label": "Internal / External",
            "internal": "Internal",
            "external": "External"
        },
        "verificationStatus": {
            "label": "Verification status",
            "new": "New",
            "skipped": "Skipped verification",
            "selfVerified": "Self-verified",
            "official": "Official"
        },
        "asset": {
            "label": "Assets"
        },
        "amount": {
            "label": "Amount",
            "equal": "is equal to",
            "range": "is between",
            "greater": "is greater than",
            "less": "is less than"
        },
        "date": {
            "label": "Date",
            "equals": "is equal to",
            "last": "in the last",
            "range": "is between",
            "after": "is after",
            "afterOrEquals": "is on or after",
            "before": "is before",
            "Days": "days",
            "Months": "months",
            "Years": "years"
        },
        "status": {
            "label": "Status",
            "confirmed": "confirmed",
            "pending": "pending",
            "claimed": "claimed",
            "unclaimed": "unclaimed"
        },
        "type": {
            "label": "Type",
            "basic": "Basic",
            "nft": "NFT",
            "alias": "Alias",
            "foundry": "Foundry",
            "governance": "Governance",
            "consolidation": "Consolidation"
        },
        "direction": {
            "label": "Direction",
            "incoming": "Incoming",
            "outgoing": "Outgoing",
            "selfTransaction": "Self transaction"
        },
        "proposalType": {
            "label": "Type",
            "official": "Official",
            "custom": "Custom"
        },
        "phase": {
            "label": "Phase"
        },
        "participated": {
            "label": "Participated",
            "yes": "Yes",
            "no": "No"
        },
        "proposalOrder": {
            "label": "Order",
            "name": "Name",
            "phase": "Phase"
        },
        "network": {
            "label": "Network"
        }
    },
    "dates": {
        "today": "Evro",
        "yesterday": "Duh",
        "daysAgo": "{time, plural, one {# roj} other {# roj}} berî",
        "weeksAgo": "{time, plural, one {# hefte} other {# hefte}} berîya",
        "monthsAgo": "{time, plural, one {# meh} other {# meh}} berî",
        "yearsAgo": "{time, plural, one {# sal} other {# sal}} berî"
    },
    "times": {
        "second": "{time, plural, one {# second} other {# seconds}}",
        "minute": "{time, plural, one {# minute} other {# minutes}}",
        "hour": "{time, plural, one {# hour} other {# hours}}",
        "day": "{time, plural, one {# day} other {# days}}",
        "week": "{time, plural, one {# week} other {# weeks}}",
        "month": "{time, plural, one {# month} other {# months}}",
        "year": "{time, plural, one {# year} other {# years}}"
    },
    "notifications": {
        "downloadingUpdate": "Nûjenkirin tê daxistin",
        "updateReady": "Nûjenkirin amadeye",
        "updateError": "Şanda vexwinê de pirsgirêkêk rûda. Ji kerema xwe dîsa biceribîn",
        "copiedToClipboard": "Li rûnûsgehê hate kopîkirin",
        "newDappConnected": "Connected to new dApp",
        "deepLinkingRequest": {
            "receivedWhileLoggedOut": "Please login to initiate the deep link",
            "invalidFormat": "The deep link you followed is invalid",
            "invalidAmount": "The amount in deep link is not an integer number {amount}",
            "invalidSurplus": "The surplus in deep link is not a number {surplus}",
            "surplusNotSupported": "The surplus is only supported for native tokens",
            "governance": {
                "unrecognizedOperation": "Unrecognized Governance operation: {operation}"
            },
            "wallet": {
                "unrecognizedOperation": "Unrecognized wallet operation: {operation}"
            }
        },
        "claimed": {
            "success": "Transaction claimed",
            "error": "Claiming transaction failed"
        },
        "hideActivity": {
            "success": "Activity was hidden"
        },
        "faucetRequest": {
            "success": "Request for tokens sent to the faucet"
        },
        "mintNativeToken": {
            "success": "Native token minting transaction sent"
        },
        "burnNativeToken": {
            "success": "Native token burning transaction sent"
        },
        "mintNft": {
            "success": "NFT minting transaction sent"
        },
        "burnNft": {
            "success": "NFT burning transaction sent"
        },
        "refreshTokenMetadata": {
            "success": "All token metadata has been reset and refreshed"
        },
        "restoreFromStrongholdBackup": {
            "wrongProtocol": "Protocol doesn't match coin type found in Stronghold backup",
            "wrongProtocolForClaiming": "You must use an IOTA-based Stronghold backup to claim Shimmer rewards"
        },
        "findShimmerRewards": {
            "error": "An error occurred while searching for rewards"
        },
        "claimShimmerRewards": {
            "success": "Shimmer rewards claimed for {accountAlias}",
            "error": "An error occurred while claiming. Try again."
        },
        "vote": {
            "success": "Votes successfully cast"
        },
        "stopVoting": {
            "success": "Voting successfully stopped"
        },
        "updateContact": {
            "success": "Contact successfully updated"
        },
        "updateNetworkAddresses": {
            "success": "Contact addresses successfully updated"
        }
    },
    "error": {
        "profile": {
            "length": "Your profile name can't be longer than {length, plural, one {# character} other {# characters}}.",
            "duplicate": "Li ser vî navî jixwe bikarhênerek heye.",
            "type": "Unable to determine the profile type"
        },
        "password": {
            "doNotMatch": "Pêborîn li hev nayên.",
            "tooWeak": "Pêborîna te a nû lawaze.",
            "row": "Zenkirina tîpên rasterast hêsane.",
            "pattern": "Zenkirina qalikên kîbordê yên kurt hêsane.",
            "names": "Zenkirina nav û paşnavên gelemperî hêsane.",
            "repeats": "Zenkirina wekî dûbareyên 'aaa' hêsane.",
            "repeats2": "Zenkirina wekî dûbareyên 'abcbcabc' hêsane.",
            "sequence": "Zenkirina hevokên tîpa hêsan e.",
            "years": "Zenkirina rojmêra nû hêsantire.",
            "dates": "Zenkirina rojmêra hêsane.",
            "common": "Ev pêborînek gelemperîye.",
            "similar": "Ev dişibe pêborînek gelemperî.",
            "word": "Zenkirina peyvekê hêsane.",
            "incorrect": "Pêborîna we ne raste.",
            "length": "Your password can't be longer than {length, plural, one {# character} other {# characters}}.",
            "sameAsOld": "Your new password must be different from your old password."
        },
        "pincode": {
            "length": "Your PIN must be {length, plural, one {# digit} other {# digits}} long.",
            "match": "PIN ji hev nagirin.",
            "incorrect": "Pêborîna heman çewte."
        },
        "address": {
            "wrongAddressType": "Wrong address type",
            "invalidBech32Format": "Invalid Bech32 format",
            "belongsToAccount": "Cannot belong to any of your accounts",
            "checksum": "Address checksum is invalid"
        },
        "account": {
            "length": "Your wallet name can't be longer than {length, plural, one {# character} other {# characters}}.",
            "emptyName": "A profile name must contain at least 1 character.",
            "duplicate": "Li ser vî navî jixwe Cuzdank heye.",
            "tilde": "Nabe navê profîlê bi qerekteran '~' destpêbike.",
            "control": "Nabe navê profîlê qerekterek yê kontrolê destpêbike.",
            "startDot": "Nabe navê profîlê bi qerekteran '.' destpêbike.",
            "chars": "Nabe navê profîlê ji qerekterek <>:\"/\\|?* destpêbike",
            "cannotRemove": "Unable to remove wallet.",
            "withBalance": "You must transfer all balances before you can delete this wallet.",
            "notLast": "You can only delete your last wallet.",
            "cannotGetBoundAccount": "Unable to get bound account"
        },
        "send": {
            "addressLength": "Addresses should be {length, plural, one {# character} other {# characters}} long.",
            "amountTooHigh": "Ev ji mayînên we yên heman pirtire.",
            "amountNoFloat": "Cannot use decimal places with the smallest unit selected",
            "amountInvalidFormat": "Jimar ne erênî xûya dike.",
            "amountSmallerThanSubunit": "The amount must be greater than the smallest subunit.",
            "tagTooLong": "The tag cannot be longer than 64 bytes.",
            "metadataTooLong": "The metadata cannot be longer than 8192 bytes.",
            "amountZero": "Divê hijmara giştî ji 0 ê mezintir be.",
            "wrongAddressPrefix": "Navnîşan bi pêveya pêşî {prefix} re destpêbike.",
            "wrongAddressFormat": "Navnîşan şêweyek rast nehatiye çêkirin.",
            "invalidAddress": "Navnîşan netêle.",
            "invalidTokenId": "The token id is not valid.",
            "unknownAsset": "The asset is not known to this account.",
            "insufficientFunds": "Mayîna Cuzdankê têrê nake.",
            "insufficientFundsGasFee": "Insufficient funds to cover the gas fee.",
            "insufficientFundsStorageDeposit": "Insufficient funds to cover the storage deposit.",
            "ongoingTransaction": "If you have ongoing transactions, please wait for their confirmation.",
            "cancelled": "The transaction was cancelled.",
            "invalidExpirationDateTime": "The chosen expiration date/time is invalid.",
            "invalidTimelockDateTime": "The chosen timelock date/time is invalid.",
            "noInputs": "No inputs found.",
            "notEnoughBalance": "Not enough balance.",
            "missingTransactionId": "The transaction ID is missing",
            "missingTransactionProgressEventPayload": "The transaction progress event payload is missing",
            "recipientRequired": "Recipient is required",
            "reservedTagKeyword": "Unable to use reserved tag keyword",
            "invalidSendParameters": "Invalid send parameters.",
            "unableToGetOriginAddress": "Unable to get the origin address."
        },
        "layer2": {
            "layer1Recipient": "A layer 2 transaction cannot be sent to a layer 1 account."
        },
        "node": {
            "invalid": "Ji kerema xwe URL'yeke derbasdar bikevê.",
            "dns": "Unable to find DNS resolution for node",
            "handshake": "Could not complete handshake with node.",
            "invalidCertificate": "Could not connect with invalid certificate.",
            "https": "HTTPS is required; insecure connections over HTTP are not supported at this time.",
            "duplicate": "Jixwe ev pêşkeşkar hatîye zêdekirin.",
            "noSyncedNode": "No synced node is available.",
            "timeNotSynced": "Device time is incorrect, unable to sync node.",
            "unabledToConnect": "Unable to connect to the node",
            "differentNetwork": "The node is located on a different network",
            "duplicateNodes": "Unable to add duplicate node",
            "noCoinType": "No coin type specified"
        },
        "network": {
            "mismatch": "The network ID for this node is \"{networkId}\", which does not match the current network.",
            "notReachable": "The network ID for this node could not be retrieved, unable to add node."
        },
        "global": {
            "generic": "Hinek tişt şaş çûn."
        },
        "backup": {
            "invalid": "The backup file was not recognized.",
            "destination": "Armanca hilanînê ne derbasdar bû.",
            "migrationRequired": "Stronghold migration is required.",
            "phraseWordCount": "There should be 24 words in your recovery phrase, currently there {length, plural, one {is #} other {are #}}.",
            "phraseUnrecognizedWord": "Di hevoka başbûna we de peyva \"{word}\" a ku nayê nas kirin",
            "phraseCaseWord": "Divê pêyv \"{word}\" bi tîpa piçûk be",
            "unableToCopyFile": "Unable to copy Stronghold backup file",
            "unableToRestoreForProfileManager": "Unable to restore Stronghold backup for profile manager"
        },
        "ledger": {
            "generic": "There was an error connecting to your Ledger device.",
            "legacyConnected": "The wrong app is open on your Ledger device.",
            "locked": "Please unlock your Ledger device by entering the PIN.",
            "mnemonicMismatch": "You have connected the wrong Ledger device or the mnemonic has changed.",
            "notConnected": "No Ledger device detected.",
            "notFound": "Ledger device not found.",
            "otherConnected": "The wrong app is open on your Ledger device.",
            "generateAddress": "There was an error generating an address.",
            "timeout": "Your Ledger device timed out.",
            "disconnected": "Your Ledger device was disconnected.",
            "noStronghold": "Unable to use Stronghold with Ledger profile.",
            "rejected": "Action was rejected on the Ledger device"
        },
        "popup": {
            "preventClose": "This popup is unable to be closed."
        },
        "crypto": {
            "cannotDecodeBech32": "Unable to decode string as Bech32 address."
        },
        "shimmerClaiming": {
            "missingProfileManager": "Unable to find Shimmer claiming profile manager",
            "cannotInitialiseAccount": "Unable to initialize Shimmer claiming account",
            "missingAccount": "Unable to find Shimmer claiming account"
        },
        "walletApiEvent": {
            "invalidAccountIndex": "Invalid account index for {eventName} event",
            "invalidPayload": "Invalid payload for {eventName} event"
        },
        "aliasMinting": {
            "aliasRequired": "Alias is required",
            "aliasNotInPossession": "Alias not in possession"
        },
        "noOutputsToConsolidate": "Not enough outputs to consolidate",
        "eventId": {
            "doesNotStartWith0x": "Event ID should start with '0x'",
            "insufficientLength": "Event ID should be 66 characters long",
            "alreadyRegistered": "Event ID already registered"
        },
        "nft": {
            "unsupportedUrl": {
                "short": "Url not supported",
                "long": "Url schema not supported"
            },
            "unsupportedFileType": {
                "short": "Unsupported media type",
                "long": "The media type is not currently supported"
            },
            "notMatchingFileTypes": {
                "short": "Loading blocked",
                "long": "NFT file type does not match the expected media type"
            },
            "notReachable": {
                "short": "Not reachable",
                "long": "NFT file is not reachable"
            },
            "tooLargeFile": {
                "short": "File is too large",
                "long": "Loading NFT blocked because the file is too large"
            },
            "downloadTooLong": {
                "short": "File took too long to download",
                "long": "Loading NFT blocked because the file took too long to download"
            },
            "corsError": {
                "short": "Loading blocked",
                "long": "Loading NFT blocked by CORS policy"
            },
            "unsafeToLoad": {
                "short": "Unsafe to load",
                "long": "An error occurred while checking if the NFT was safe to load"
            },
            "loadingError": {
                "short": "Unable to load",
                "long": "An error occurred while loading the NFT"
            }
        },
        "governance": {
            "unableToAddProposal": {
                "short": "Unable to add proposal",
                "long": "Unable to find proposal {proposalId} on the specified node"
            }
        },
        "erc20Token": {
            "invalidAddressFormat": "Must be hexadecimal format",
            "invalidAddressLength": "Length is invalid"
        },
        "input": {
            "invalid": "{field} input is invalid",
            "required": "{field} is required",
            "alreadyUsed": "{field} is already being used",
            "tooLong": "{field} must be {numCharacters} or less characters"
        },
        "walletConnect": {
            "invalidUri": "Invalid URI",
            "invalidProtocol": "Invalid protocol, must start with 'wc'.",
            "deprecatedVersion": "dApp uses a deprecated wallet connect version."
        },
        "web3": {
            "unableToGetProvider": "Unable to get web3 provider.",
            "unableToFormSmartContractData": "Unable to form smart contract data."
        },
        "token": {
            "missingMetadata": "The token metadata is missing."
        }
    },
    "warning": {
        "transaction": {
            "invalidDateTime": "The chosen date must be in the future."
        }
    },
    "tooltips": {
        "optionalInput": "This optional data will be public on the explorer and viewable by everyone.",
        "transactionDetails": {
            "incoming": {
                "storageDeposit": "A refundable token deposit needed to store your transaction on the Tangle.",
                "giftedStorageDeposit": "The storage deposit for this transaction was gifted to you. You do not need to refund the deposit.",
                "expirationTime": "Claim these funds before the expiration time or they will be returned to the sender.",
                "timelockDate": "The sender set a timelock on these funds. You will be able to spend them once the timelock expires.",
                "metadata": "An optional data field for storing data persistently on the Tangle.",
                "tag": "A short optional data field. Tagging groups of transactions can make them easier to search for."
            },
            "outgoing": {
                "storageDeposit": "A storage deposit is a refundable deposit needed to store your transaction on the Tangle.",
                "giftedStorageDeposit": "The recipient does not need to refund the deposit.",
                "expirationTime": "If the recipient does not claim in time your tokens will be returned to you.",
                "timelockDate": "You added a timelock to this transaction. The recipient will not be able to spend these funds until the timelock expires.",
                "metadata": "An optional data field for storing data persistently on the Tangle.",
                "tag": "A short optional data field. Tagging groups of transactions can make them easier to search for."
            },
            "nftMetadata": {
                "type": "The MimeType of the NFT. e.g. image/png.",
                "issuerName": "The name of the creator"
            }
        },
        "mintNativeToken": {
            "decimals": "IRC30 optional parameter: Number of decimals the token uses (divide the token amount by 10^decimals to get its user representation).",
            "description": "IRC30 optional parameter: The human-readable description of the token.",
            "url": "IRC30 optional parameter: URL pointing to more resources about the token like a website or social media page.",
            "logoUrl": "IRC30 optional parameter: URL pointing to an image resource of the token logo."
        },
        "mintNftForm": {
            "collectionName": "Optional parameter: The collection's name",
            "royalties": "Optional parameter: An object containing key-value pairs of addresses that map to payout percentages",
            "issuerName": "Optional parameter: The name of the creator",
            "description": "Optional parameter: A description of the NFT",
            "attributes": "Optional parameter: An array of traits and values that define attributes of the NFT",
            "uri": "To create a URI using custom media, first upload your file to IPFS via a storage service (e.g. https://nft.storage/)",
            "quantity": "Optional parameter: The quantity of copies minted with this metadata."
        },
        "governance": {
            "removeProposalWarning": "You must stop voting for this proposal before removing it.",
            "outdatedNode": {
                "title": "Outdated node URL",
                "body": "The node URL for this proposal is outdated. Please update it to access the latest voting results."
            },
            "resultsNotAvailable": {
                "title": "Results not available",
                "body": "The results are no longer available on this proposal's corresponding node. Please update it to access the results."
            }
        },
        "updateStronghold": {
            "profileBadge": "Your Stronghold is out of date. Log in to update Stronghold."
        },
        "tokenIsNotVerified": {
            "title": "Token is not verified",
            "text": "Compare the token metadata against the relevant team’s official website. Only verify tokens that you trust."
        }
    },
    "tabs": {
        "wallet": "Wallet",
        "collectibles": "Collectibles",
        "governance": "Governance",
        "developer": "Developer",
        "tokens": "Tokens"
    },
    "pills": {
        "asyncStatus": {
            "unclaimed": "unclaimed",
            "claimed": "claimed",
            "expired": "expired",
            "timelocked": "timelocked"
        },
        "governance": {
            "proposalStatus": {
                "upcoming": "Announcement",
                "commencing": "Voting open",
                "holding": "Counting",
                "ended": "Closed",
                "nodeOutdated": "Outdated node URL",
                "resultsNotAvailable": "Results not available"
            }
        },
        "networkHealth": {
            "down": "Down",
            "degraded": "Degraded",
            "operational": "Operational",
            "disconnected": "Disconnected"
        }
    },
    "menus": {
        "dateTimePicker": {
            "1hour": "In 1 hour",
            "1day": "In 1 day",
            "1week": "In 1 week",
            "customDate": {
                "title": "Custom date",
                "subtitle": "Set custom date"
            }
        }
    }
}
